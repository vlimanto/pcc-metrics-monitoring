---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: monitoring
spec:
  storageClassName: gp2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
       global:
         scrape_interval: 15s
         scrape_timeout: 10s
         evaluation_interval: 15s
       scrape_configs:
       # Prisma Cloud scrape configuration
       - job_name: twistlock
         scheme: https
         static_configs:
       # Replace "target" and "metrics_path" with your path to Console respectively
         - targets: ['us-west1.cloud.twistlock.com']
         metrics_path: /us-4-161055283/api/v1/metrics
       # Access/secret API key with Compute Auditor (or greater) access
         basic_auth:
           username_file: '/mnt/secrets-store/username'
           password_file: '/mnt/secrets-store/password'
       
       # Grafana monitoring 
       - job_name: grafana
         metrics_path: /metrics
         scheme: http
         static_configs:
         - targets:
           - grafana:3000
       
       # Prometheus self-monitoring
       - job_name: prometheus  
         honor_timestamps: true 
         metrics_path: /metrics
         scheme: http
         follow_redirects: true
         enable_http2: true
         static_configs:
         - targets:
           - localhost:9090

       # Prisma Cloud API monitoring
       - job_name: agentlessProgress  
         metrics_path: /probe
         params:
           module: [agentlessScan]
         static_configs:
         - targets:
           - https://us-west1.cloud.twistlock.com/us-4-161055283/api/v33.01/agentless/progress
         relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              ## Location of the json exporter's real <hostname>:<port>
              replacement: localhost:7979
       - job_name: registryScanProgress  
         metrics_path: /probe
         params:
           module: [registryScan]
         static_configs:
         - targets:
           - https://us-west1.cloud.twistlock.com/us-4-161055283/api/v33.01/registry/progress
         relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              ## Location of the json exporter's real <hostname>:<port>
              replacement: localhost:7979

  json-exporter.yml: |
      modules:
        agentlessScan:
          metrics:
          - name: agentless_scanned
            help: Scanned is the number of entities for which the scan completed
            path: '{..scanned}'
            labels:
              agentless_scan_type: '{..type}'
              agentless_scan_title: '{..title}'
          - name: agentless_total
            help: Total is the total amount of entities that should be scanned
            path: '{..total}'
            labels:
              agentless_scan_type: '{..type}'
              agentless_scan_title: '{..title}'
          http_client_config:
            tls_config:
              insecure_skip_verify: true
            basic_auth:
              username_file: '/mnt/secrets-store/username'
              password_file: '/mnt/secrets-store/password'
        registryScan:
          metrics:
          - name: registry_discovery
            help: Discovery is the first step of Registry Scanning
            type: object
            path: '{[?(@.isScanOngoing == true)]}'
            values:
              scanned: '{@.discovery.scanned}'
              total: '{@.discovery.total}'
            labels:
              registry_discovery_id: '{@.discovery.id}'
              registry_discovery_title: '{@.discovery.title}'
          - name: registry_imageScan
            help: Image Scanning is the second step of Registry Scanning
            type: object
            path: '{[?(@.isScanOngoing == true)]}'
            values:
              scanned: '{@.imageScan.scanned}'
              total: '{@.imageScan.total}'
            labels:
              registry_imageScan_id: '{@.imageScan.id}'
              registry_imageScan_title: '{@.imageScan.title}'
          http_client_config:
            tls_config:
              insecure_skip_verify: true
            basic_auth:
              username_file: '/mnt/secrets-store/username'
              password_file: '/mnt/secrets-store/password'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: prometheus
      containers:
      - name: json-exporter
        image: docker.io/prometheuscommunity/json-exporter:master
        imagePullPolicy: IfNotPresent
        args:
          - '--config.file=/etc/prometheus/json-exporter.yml'
          - '--log.level=debug'
          - '--web.listen-address=:7979'
        ports:
        - name: probe
          containerPort: 7979
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      - name: prometheus
        image: docker.io/prom/prometheus:latest
        imagePullPolicy: IfNotPresent
        args:
          - '--storage.tsdb.retention.time=6h'
          - '--storage.tsdb.path=/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--log.level=debug'
        command:
        - /bin/prometheus
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      restartPolicy: Always
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        # set fsGroup equal to runAsGroup
        fsGroup: 65534
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      - name: data
        persistentVolumeClaim:
          claimName: prometheus-pvc
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "app4-pcc-secrets"

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
  - name: prometheus
    protocol: TCP
    port: 9090
---
